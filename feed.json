{
    "version": "https://jsonfeed.org/version/1.1",
    "title": "Gavin Wiggins",
    "home_page_url": "https://gavinw.me",
    "feed_url": "https://gavinw.me/feed.json",
    "items": [
        {
            "id": "https://gavinw.me/notes/python/projects-uv.html",
            "url": "https://gavinw.me/notes/python/projects-uv.html",
            "title": "Projects with uv",
            "date_published": "2025-01-07T00:00:00Z",
            "content_html": "<p>Managing a virtual environment and its dependencies can be a hassle for Python projects. Choosing between the different techniques to install Python and different package managers can be a daunting task. Luckily, uv makes this process much easier.</p><p><a href=\"https://gavinw.me/notes/python/projects-uv.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/run-script-uv.html",
            "url": "https://gavinw.me/notes/python/run-script-uv.html",
            "title": "Run scripts with uv",
            "date_published": "2025-01-06T00:00:00Z",
            "content_html": "<p>A Python script is a file intended for standalone execution. The uv tool can be used to directly run a script even if other Python packages are needed to run it. This offers a more streamlined approach for running scripts compared to manually managing a virtual environment and its dependencies.</p><p><a href=\"https://gavinw.me/notes/python/run-script-uv.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/virtual-env-uv.html",
            "url": "https://gavinw.me/notes/python/virtual-env-uv.html",
            "title": "Virtual environments with uv",
            "date_published": "2025-01-05T00:00:00Z",
            "content_html": "<p>The uv tool is a great option for installing Python and creating virtual environments. It will automatically install Python if it is not available on your system.</p><p><a href=\"https://gavinw.me/notes/python/virtual-env-uv.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/package-data.html",
            "url": "https://gavinw.me/notes/python/package-data.html",
            "title": "Package with data",
            "date_published": "2024-11-24T00:00:00Z",
            "content_html": "<p>The file structure below represents a project for a Python package named <code>mypackage</code> that includes data files. The data files in this example are CSV text files located in the package's source directory at <code>src/mypackage/data/</code>. The package can be installed using <code>pip install .</code> from the root level of the project.</p><p><a href=\"https://gavinw.me/notes/python/package-data.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/config-dataclass.html",
            "url": "https://gavinw.me/notes/python/config-dataclass.html",
            "title": "Configuration using a dataclass",
            "date_published": "2024-11-21T00:00:00Z",
            "content_html": "<p>A data class in Python can be used to store configuration settings for an application or service. Default configuration values are assigned to fields on the data class. However, the user can overload those values by using a class method to load the configuration settings from a file.</p><p><a href=\"https://gavinw.me/notes/python/config-dataclass.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/discardable-result.html",
            "url": "https://gavinw.me/notes/swift/discardable-result.html",
            "title": "Discardable result",
            "date_published": "2024-10-07T00:00:00Z",
            "content_html": "<p>Functions marked with <code>@discardableResult</code> allow you to ignore the return value.</p><p><a href=\"https://gavinw.me/notes/swift/discardable-result.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/argparse.html",
            "url": "https://gavinw.me/notes/python/argparse.html",
            "title": "Argparse",
            "date_published": "2024-09-28T00:00:00Z",
            "content_html": "<p>The <code>argparse</code> module provides an interface to write command-line programs in Python. It is part of the Python standard library so there's no need for external dependencies. A basic example is given below that demonstrates positional and optional arguments. The second example shows the use of subparsers to create subcommands.</p><p><a href=\"https://gavinw.me/notes/python/argparse.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/flat-indexing.html",
            "url": "https://gavinw.me/notes/swift/flat-indexing.html",
            "title": "Flat indexing an N-dimensional array",
            "date_published": "2024-08-07T00:00:00Z",
            "content_html": "<p>An N-dimensional or multi-dimensional array is a data structure with one or more dimensions. An index for each dimension must be provided to access a particular element's value. Since the array's data is stored in one-dimensional memory, the indices must be converted to a flat index (one-dimension) to access the corresponding memory location.</p><p><a href=\"https://gavinw.me/notes/swift/flat-indexing.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/protocol.html",
            "url": "https://gavinw.me/notes/python/protocol.html",
            "title": "Protocol",
            "date_published": "2024-07-13T00:00:00Z",
            "content_html": "<p>A protocol is a way to define structural typing or \"duck typing\" in Python. It defines a set of attributes and/or methods that an object must have in order to be considered compatible with that protocol. Below is a protocol defined as an <code>Activity</code> class which must have <code>name</code> and <code>duration</code> attributes along with a <code>get_message</code> method.</p><p><a href=\"https://gavinw.me/notes/python/protocol.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/elapsed-time.html",
            "url": "https://gavinw.me/notes/swift/elapsed-time.html",
            "title": "Elapsed time",
            "date_published": "2024-06-24T00:00:00Z",
            "content_html": "<p>The functions shown below are examples of measuring elapsed time in Swift. The sleep function is used to delay the code execution for 4 seconds. Consequently, the elapsed time for each example is approximately 4 seconds.</p><p><a href=\"https://gavinw.me/notes/swift/elapsed-time.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/accelerate/complex-multiplication.html",
            "url": "https://gavinw.me/notes/accelerate/complex-multiplication.html",
            "title": "Complex multiplication",
            "date_published": "2024-05-11T00:00:00Z",
            "content_html": "<p>Use the <code>cblas_cgemv</code> function in Accelerate to multiply a matrix and vector with single-precision complex values. For this example, a structure named <code>Complex</code> with <code>real</code> and <code>imag</code> properties is utilized but <code>DSPComplex</code> can also be used.</p><p><a href=\"https://gavinw.me/notes/accelerate/complex-multiplication.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/accelerate/matrix-multiplication.html",
            "url": "https://gavinw.me/notes/accelerate/matrix-multiplication.html",
            "title": "Matrix multiplication",
            "date_published": "2024-05-04T00:00:00Z",
            "content_html": "<p>Accelerate provides two functions for performing matrix multiplication. The first is the <code>vDSP_mmulD</code> function which is demonstrated below.</p><p><a href=\"https://gavinw.me/notes/accelerate/matrix-multiplication.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/matrix-multiplication.html",
            "url": "https://gavinw.me/notes/metal/matrix-multiplication.html",
            "title": "Matrix multiplication",
            "date_published": "2024-05-03T00:00:00Z",
            "content_html": "<p>Metal Performance Shaders provide <code>MPSMatrix</code> and <code>MPSMatrixMultiplication</code> objects to perform matrix multiplication on the GPU. The code below demonstrates multiplication of two matrices.</p><p><a href=\"https://gavinw.me/notes/metal/matrix-multiplication.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/package-library.html",
            "url": "https://gavinw.me/notes/swift/package-library.html",
            "title": "Package a library",
            "date_published": "2024-03-15T00:00:00Z",
            "content_html": "<p>There are two ways to create a Swift package for a library: using the command line and using Xcode. Each approach is discussed in the following sections.</p><p><a href=\"https://gavinw.me/notes/swift/package-library.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/makefiles.html",
            "url": "https://gavinw.me/notes/python/makefiles.html",
            "title": "Makefiles",
            "date_published": "2024-03-14T00:00:00Z",
            "content_html": "<p>Makefiles are typically used for C and C++ projects to build source code but they can be useful for Python projects too. A Makefile is just a text file used by the GNU Make tool to run commands. For a Python project, these commands can run unit tests, format your code, or publish a package to PyPI.</p><p><a href=\"https://gavinw.me/notes/python/makefiles.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/textwrap-dedent.html",
            "url": "https://gavinw.me/notes/python/textwrap-dedent.html",
            "title": "Textwrap dedent",
            "date_published": "2024-02-29T00:00:00Z",
            "content_html": "<p>Remove leading whitespace from every line in a string with the <code>textwrap.dedent()</code> function. The first example shown below prints a multiline string that is defined in a function. The second example prints the same string but removes the leading whitespace.</p><p><a href=\"https://gavinw.me/notes/python/textwrap-dedent.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/compiler-optimizations.html",
            "url": "https://gavinw.me/notes/swift/compiler-optimizations.html",
            "title": "Compiler optimizations",
            "date_published": "2024-02-24T00:00:00Z",
            "content_html": "<p>The Swift compiler <code>swiftc</code> provides options such as <code>-O</code>, <code>-Osize</code>, and <code>-Ounchecked</code> to build code with optimizations turned on. Use optimizations such as <code>-Osize</code> to target small code size and the <code>-Ounchecked</code> to remove runtime safety checks.</p><p><a href=\"https://gavinw.me/notes/swift/compiler-optimizations.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/create-package.html",
            "url": "https://gavinw.me/notes/swift/create-package.html",
            "title": "Create a package",
            "date_published": "2024-02-18T00:00:00Z",
            "content_html": "<p>There are two approaches to creating a Swift package. One is by creating a new package in Xcode and the other is with the Swift command line tool.</p><p><a href=\"https://gavinw.me/notes/swift/create-package.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/virtual-env.html",
            "url": "https://gavinw.me/notes/python/virtual-env.html",
            "title": "Virtual environments",
            "date_published": "2024-02-16T00:00:00Z",
            "content_html": "<p>The <code>venv</code> module included with Python is used to create and manage virtual environments. This page provides some useful commands for creating and working with virtual environments. A virtual environment should not be checked into source control via Git or other such systems.</p><p><a href=\"https://gavinw.me/notes/python/virtual-env.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/cached-class-property.html",
            "url": "https://gavinw.me/notes/python/cached-class-property.html",
            "title": "Cached class property",
            "date_published": "2024-01-13T00:00:00Z",
            "content_html": "<p>The <a href=\"https://docs.python.org/3/library/functools.html\">functools</a> module provides a <code>@cached_property</code> decorator to store the value of a class property.</p><p><a href=\"https://gavinw.me/notes/python/cached-class-property.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/cache-function.html",
            "url": "https://gavinw.me/notes/python/cache-function.html",
            "title": "Cache function",
            "date_published": "2024-01-13T00:00:00Z",
            "content_html": "<p>The <a href=\"https://docs.python.org/3/library/functools.html\">functools</a> module provides a <code>@cache</code> decorator to store the results of an expensive function; also known as memoize.</p><p><a href=\"https://gavinw.me/notes/python/cache-function.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/version.html",
            "url": "https://gavinw.me/notes/python/version.html",
            "title": "Version number",
            "date_published": "2023-11-30T00:00:00Z",
            "content_html": "<p>Use the <a href=\"https://docs.python.org/3/library/importlib.metadata.html\">importlib.metadata</a> library in Python to get the version number of a package. The example below gets the version of the ipython package that has been installed in the environment.</p><p><a href=\"https://gavinw.me/notes/python/version.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/sublime-project.html",
            "url": "https://gavinw.me/notes/python/sublime-project.html",
            "title": "Sublime Text project",
            "date_published": "2023-11-25T00:00:00Z",
            "content_html": "<p>Projects in <a href=\"https://www.sublimetext.com\">Sublime Text</a> are made up of two files: the <code>.sublime-project</code> file, which contains the project configuration, and the <code>.sublime-workspace</code> file, which contains user specific data such as the open files and the modifications to each file.</p><p><a href=\"https://gavinw.me/notes/python/sublime-project.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/doctest.html",
            "url": "https://gavinw.me/notes/python/doctest.html",
            "title": "Doctest",
            "date_published": "2023-11-17T00:00:00Z",
            "content_html": "<p>The docstring of the <code>adder()</code> function shown below contains two examples of how to use the function. The function resides in a file named <code>example.py</code>. Use the <code>doctest</code> module to test the examples in this docstring.</p><p><a href=\"https://gavinw.me/notes/python/doctest.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/sampler.html",
            "url": "https://gavinw.me/notes/metal/sampler.html",
            "title": "Sampler",
            "date_published": "2023-10-10T00:00:00Z",
            "content_html": "<p>This example uses a Metal <code>sampler</code> to upscale a noise texture as the Metal view increases in size. The left image shown below represents the actual size of the texture. The right image is the sampled (upscaled) texture due to the larger window size which increases the size of the Metal view.</p><p><a href=\"https://gavinw.me/notes/metal/sampler.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/noise.html",
            "url": "https://gavinw.me/notes/metal/noise.html",
            "title": "Noise",
            "date_published": "2023-09-29T00:00:00Z",
            "content_html": "<p>This example creates noise using a shader function that is based on the Golden Ratio. It is adapted from a function on the <a href=\"https://www.shadertoy.com/view/ltB3zD\">Shadertoy</a> website.</p><p><a href=\"https://gavinw.me/notes/metal/noise.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/triangle.html",
            "url": "https://gavinw.me/notes/metal/triangle.html",
            "title": "Triangle",
            "date_published": "2023-09-19T00:00:00Z",
            "content_html": "<p>This example creates a triangle using vertex and fragment shaders.</p><p><a href=\"https://gavinw.me/notes/metal/triangle.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/clear-color.html",
            "url": "https://gavinw.me/notes/metal/clear-color.html",
            "title": "Clear color",
            "date_published": "2023-09-10T00:00:00Z",
            "content_html": "<p>This example sets the clear color to blue for the Metal view. This color is like the background color of the view.</p><p><a href=\"https://gavinw.me/notes/metal/clear-color.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/color-compute.html",
            "url": "https://gavinw.me/notes/metal/color-compute.html",
            "title": "Color view with compute kernel",
            "date_published": "2023-09-08T00:00:00Z",
            "content_html": "<p>Here is a basic example of using Metal to change the color of a view using a compute function (kernel). The pixels in the view are represented in Metal as a grid. The sliders change the RGB color values for each pixel in the grid.</p><p><a href=\"https://gavinw.me/notes/metal/color-compute.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/gauss.html",
            "url": "https://gavinw.me/notes/numpy/gauss.html",
            "title": "Gauss-Legendre points and weights",
            "date_published": "2023-08-31T00:00:00Z",
            "content_html": "<p>The function below returns the Gauss-Legendre integration points and weights for a 2D quadrilateral using values from a 1D quadrature. The 1D values are obtained from NumPy's <code>leggauss()</code> function.</p><p><a href=\"https://gavinw.me/notes/numpy/gauss.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/metal/particles.html",
            "url": "https://gavinw.me/notes/metal/particles.html",
            "title": "Particles",
            "date_published": "2023-08-29T00:00:00Z",
            "content_html": "<p>This example uses Metal to draw particles (pixels) in a view. The particles move throughout the view based on their position and velocity. This example is inspired by the <a href=\"https://metalkit.org/2017/11/30/working-with-particles-in-metal-part-3/\">Working with Particles in Metal part 3</a> article by Marius Horga. However, this example is implemented with SwiftUI for macOS whereas Marius' example runs in an Xcode playground.</p><p><a href=\"https://gavinw.me/notes/metal/particles.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/display-scale.html",
            "url": "https://gavinw.me/notes/swiftui/display-scale.html",
            "title": "Display scale",
            "date_published": "2023-08-28T00:00:00Z",
            "content_html": "<p>Get the display scale of the environment with the <code>displayScale</code> value. This can be used to convert a view's dimensions in points to pixels as seen in the example below.</p><p><a href=\"https://gavinw.me/notes/swiftui/display-scale.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/array2d.html",
            "url": "https://gavinw.me/notes/cpp/array2d.html",
            "title": "Array with two-dimensions",
            "date_published": "2023-08-13T00:00:00Z",
            "content_html": "<p>A two-dimensional array can be created using the traditional C-style array or with the C++ standard array container. Both approaches are demonstrated below.</p><p><a href=\"https://gavinw.me/notes/cpp/array2d.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/include-function.html",
            "url": "https://gavinw.me/notes/cpp/include-function.html",
            "title": "Include function",
            "date_published": "2023-07-25T00:00:00Z",
            "content_html": "<p>This example uses a function defined in another file. The <code>main.cpp</code> example uses the <code>Log()</code> function to print a string to the screen. This function is implemented in <code>logger.cpp</code> and <code>logger.h</code>.</p><p><a href=\"https://gavinw.me/notes/cpp/include-function.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/image-colormap.html",
            "url": "https://gavinw.me/notes/swiftui/image-colormap.html",
            "title": "Image from colormap filter",
            "date_published": "2023-07-22T00:00:00Z",
            "content_html": "<p>This SwiftUI example demonstrates creating a gray scale image from numerical data. Data is provided as a linear ramp from 0 to 1 (see top image) or as random numbers in the range of 0 to 1 (see bottom image). A colormap filter applies color to the gray scale image using RGB values from the viridis colormap.</p><p><a href=\"https://gavinw.me/notes/swiftui/image-colormap.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/image-colormap.html",
            "url": "https://gavinw.me/notes/swift/image-colormap.html",
            "title": "Image from colormap filter",
            "date_published": "2023-07-19T00:00:00Z",
            "content_html": "<p>A colormap can be applied to an image using a Core Image filter. The first step in this process, is to create a gradient image that represents the colormap. The function shown below creates a linear gradient image of the viridis colormap.</p><p><a href=\"https://gavinw.me/notes/swift/image-colormap.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/debugger.html",
            "url": "https://gavinw.me/notes/python/debugger.html",
            "title": "Debugger",
            "date_published": "2023-07-18T00:00:00Z",
            "content_html": "<p>The <a href=\"https://docs.python.org/3/library/pdb.html\">pdb</a> module provides an interactive debugger for Python programs. It supports breakpoints and stepping through the source code. To demonstrate using the debugger and setting a breakpoint, first consider the example shown below.</p><p><a href=\"https://gavinw.me/notes/python/debugger.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/image-data.html",
            "url": "https://gavinw.me/notes/swift/image-data.html",
            "title": "Image from array data",
            "date_published": "2023-07-18T00:00:00Z",
            "content_html": "<p>An image can be created from numerical data using the Core Graphics and Accelerate frameworks. The sections below demonstrate how to create a gray scale image from normalized data and color images from RGB data.</p><p><a href=\"https://gavinw.me/notes/swift/image-data.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/normalize-array.html",
            "url": "https://gavinw.me/notes/swift/normalize-array.html",
            "title": "Normalize array values",
            "date_published": "2023-07-17T00:00:00Z",
            "content_html": "<p>In this example, values in an array are normalized to be in the range 0 to 1. The normalized values are calculated using the maximum and minimum values from the original array.</p><p><a href=\"https://gavinw.me/notes/swift/normalize-array.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/arrays.html",
            "url": "https://gavinw.me/notes/swift/arrays.html",
            "title": "Arrays",
            "date_published": "2023-07-14T00:00:00Z",
            "content_html": "<p>An array in Swift is an ordered collection of values. It is written as <code>Array&lt;Element&gt;</code> or in a shorthand form using square brackets <code>[Element]</code> where element is the type of values stored in the array.</p><p><a href=\"https://gavinw.me/notes/swift/arrays.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/heatmap-chart.html",
            "url": "https://gavinw.me/notes/swiftui/heatmap-chart.html",
            "title": "Heat map chart",
            "date_published": "2023-07-08T00:00:00Z",
            "content_html": "<p>Use a <code>RectangleMark()</code> in a Swift Chart to create a 2D heat map of data. In this example, the data is represented using a <code>Grid</code> struct that contains an array of <code>Point</code> structs. The <code>Point</code> struct defines the x and y coordinate of the associated value. The x coordinate is a range based on the number of columns, the y coordinate is a range based on the number of columns, and the value is a random number from 0 to 1. Faint lines may appear on the chart if the frame size is not evenly divisible by the number of rows and columns defined by the <code>Grid</code> struct; this is likely caused by each <code>RectangleMark()</code> not perfectly aligning to the screen pixels.</p><p><a href=\"https://gavinw.me/notes/swiftui/heatmap-chart.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/conda-env.html",
            "url": "https://gavinw.me/notes/python/conda-env.html",
            "title": "Conda environments",
            "date_published": "2023-06-15T00:00:00Z",
            "content_html": "<p>Similar to Python's <code>venv</code> module, Conda can also create virtual environments but these environments support languages other than Python.</p><p><a href=\"https://gavinw.me/notes/python/conda-env.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/async-for-loop.html",
            "url": "https://gavinw.me/notes/swiftui/async-for-loop.html",
            "title": "Async for-in loop",
            "date_published": "2023-06-13T00:00:00Z",
            "content_html": "<p>Use an asynchronous operation to update a SwiftUI Text view from a for-in loop. In this example, the <code>step</code> variable is updated for each iteration on the main thread. This allows the variable to update the Text view.</p><p><a href=\"https://gavinw.me/notes/swiftui/async-for-loop.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/package-name.html",
            "url": "https://gavinw.me/notes/python/package-name.html",
            "title": "Package name",
            "date_published": "2023-06-11T00:00:00Z",
            "content_html": "<p>The distribution name of a Python package can be different than the import name. Below is an example of a repository named <code>sklearn-model</code> which contains the <code>skmodel</code> package.</p><p><a href=\"https://gavinw.me/notes/python/package-name.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/imshow-plot.html",
            "url": "https://gavinw.me/notes/matplotlib/imshow-plot.html",
            "title": "Imshow plot",
            "date_published": "2023-05-10T00:00:00Z",
            "content_html": "<p>Display data as an image using Matplotlib's imshow method.</p><p><a href=\"https://gavinw.me/notes/matplotlib/imshow-plot.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/matshow-plot.html",
            "url": "https://gavinw.me/notes/matplotlib/matshow-plot.html",
            "title": "Matshow plot",
            "date_published": "2023-05-10T00:00:00Z",
            "content_html": "<p>Visualize an array using Matplotlib's matshow function. The first example shown below plots a 2D array and the second example plots a diagonal array.</p><p><a href=\"https://gavinw.me/notes/matplotlib/matshow-plot.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/node.html",
            "url": "https://gavinw.me/notes/javascript/node.html",
            "title": "Node",
            "date_published": "2023-04-28T00:00:00Z",
            "content_html": "<p>Node.js is a JavaScript run-time environment for developing command line tools and server-side applications outside the browser. See <a href=\"https://nodejs.dev\">https://nodejs.dev</a> or <a href=\"https://nodejs.org\">https://nodejs.org</a> for more information. The recommended way to install Node.js is with the Node Version Manager (nvm). See the installation steps at <a href=\"https://github.com/nvm-sh/nvm\">https://github.com/nvm-sh/nvm</a>.</p><p><a href=\"https://gavinw.me/notes/javascript/node.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/directory-contents.html",
            "url": "https://gavinw.me/notes/swift/directory-contents.html",
            "title": "Directory contents",
            "date_published": "2023-04-18T00:00:00Z",
            "content_html": "<p>This example uses the <code>FileManager</code> class to list the contents of a folder (directory) located on the Desktop. The printed output from running this example as <code>main.swift</code> is also given below.</p><p><a href=\"https://gavinw.me/notes/swift/directory-contents.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/count-letters.html",
            "url": "https://gavinw.me/notes/python/count-letters.html",
            "title": "Count letters",
            "date_published": "2023-04-15T00:00:00Z",
            "content_html": "<p>Given the string <code>Mary had a little Mommy lamb</code>, count the number of times a letter appears in the string. See the examples below for different approaches.</p><p><a href=\"https://gavinw.me/notes/python/count-letters.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/line-chart.html",
            "url": "https://gavinw.me/notes/swiftui/line-chart.html",
            "title": "Line chart",
            "date_published": "2023-03-28T00:00:00Z",
            "content_html": "<p>All of the examples on this page have the window resizability set to the content size. This allows the size of the window to be defined by the chart view.</p><p><a href=\"https://gavinw.me/notes/swiftui/line-chart.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/load-html.html",
            "url": "https://gavinw.me/notes/javascript/load-html.html",
            "title": "Load content from HTML files",
            "date_published": "2023-03-26T00:00:00Z",
            "content_html": "<p>Content from HTML files can be loaded asynchronously using the <code>fetch()</code> method. In the example below, the content of the left and right columns are loaded from HTML files. The column layout is from the <a href=\"https://getbootstrap.com\">Bootstrap</a> CSS.</p><p><a href=\"https://gavinw.me/notes/javascript/load-html.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/scroll-columns.html",
            "url": "https://gavinw.me/notes/javascript/scroll-columns.html",
            "title": "Scroll columns",
            "date_published": "2023-03-24T00:00:00Z",
            "content_html": "<p>Set the max height and overflow styles of <a href=\"https://getbootstrap.com\">Bootstrap</a> columns to independently scroll the columns. This isn't JavaScript, but it's related to website layout so it might be useful for designing web applications.</p><p><a href=\"https://gavinw.me/notes/javascript/scroll-columns.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/select-results.html",
            "url": "https://gavinw.me/notes/javascript/select-results.html",
            "title": "Select results",
            "date_published": "2023-03-23T00:00:00Z",
            "content_html": "<p>In this example, number inputs are used as width and height parameters. These parameters are used to calculate area and perimeter results. The result views are in separate HTML files that are fetched with JavaScript.</p><p><a href=\"https://gavinw.me/notes/javascript/select-results.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/strings.html",
            "url": "https://gavinw.me/notes/javascript/strings.html",
            "title": "Strings",
            "date_published": "2023-03-19T00:00:00Z",
            "content_html": "<p>A string in JavaScript is represented by single or double quotes.</p><p><a href=\"https://gavinw.me/notes/javascript/strings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/plotly-graph.html",
            "url": "https://gavinw.me/notes/javascript/plotly-graph.html",
            "title": "Plotly graph",
            "date_published": "2023-03-19T00:00:00Z",
            "content_html": "<p><a href=\"https://plotly.com\">Plotly</a> is an open-source graphing library for JavaScript and other programming languages. Two basic examples are given below. The first graph uses a custom background color to match the web page. The second graph turns off some of the grid lines and uses the default background color.</p><p><a href=\"https://gavinw.me/notes/javascript/plotly-graph.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/input-number.html",
            "url": "https://gavinw.me/notes/javascript/input-number.html",
            "title": "Input number",
            "date_published": "2023-03-18T00:00:00Z",
            "content_html": "<p>The example below demonstrates how to calculate the area from width and length inputs. Notice the type of each input is defined as number. Click the button to calculate the area or use an event listener to automatically run the area function.</p><p><a href=\"https://gavinw.me/notes/javascript/input-number.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/fizzbuzz.html",
            "url": "https://gavinw.me/notes/javascript/fizzbuzz.html",
            "title": "Fizz buzz",
            "date_published": "2023-03-18T00:00:00Z",
            "content_html": "<p>This is a typical fizz buzz example written in JavaScript that runs in a web page. The input defines the number of iterations. A number divisible by 3 displays the word \"Fizz\", a number divisible by 5 displays \"Buzz\", and a number divisible by both 3 and 5 displays \"Fizz Buzz\".</p><p><a href=\"https://gavinw.me/notes/javascript/fizzbuzz.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/resources.html",
            "url": "https://gavinw.me/notes/javascript/resources.html",
            "title": "Resources",
            "date_published": "2023-03-17T00:00:00Z",
            "content_html": "<p>Here are some helpful resources for learning JavaScript:</p><p><a href=\"https://gavinw.me/notes/javascript/resources.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/select-units.html",
            "url": "https://gavinw.me/notes/javascript/select-units.html",
            "title": "Select units",
            "date_published": "2023-03-17T00:00:00Z",
            "content_html": "<p>In this example, the select element is used to change the units associated with the input parameter. As shown in the image below, the diameter is entered as 4.5 inches and is automatically converted to meters as shown in the Results section. The same conversion to meters is done for the height parameter. Finally, the parameters (in units of meters) are used to calculate the cylinder volume in cubic meters (m<sup>3</sup>).</p><p><a href=\"https://gavinw.me/notes/javascript/select-units.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/javascript/modules.html",
            "url": "https://gavinw.me/notes/javascript/modules.html",
            "title": "Modules",
            "date_published": "2023-02-27T00:00:00Z",
            "content_html": "<p>A module is a single JavaScript file where its variables and functions can be accessed from other JavaScript files. A local web server must be used to test modules in the browser; otherwise, opening the web page locally will not work.</p><p><a href=\"https://gavinw.me/notes/javascript/modules.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/window-defaultsize.html",
            "url": "https://gavinw.me/notes/swiftui/window-defaultsize.html",
            "title": "Window default size",
            "date_published": "2023-02-22T00:00:00Z",
            "content_html": "<p>The default window size in this example is set to 400x200. If the window size is changed by dragging the corner or side, then the new size becomes the default size when the app is relaunched. Delete the app's container to restore the app to its default state.</p><p><a href=\"https://gavinw.me/notes/swiftui/window-defaultsize.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/window-resizability.html",
            "url": "https://gavinw.me/notes/swiftui/window-resizability.html",
            "title": "Window resizability",
            "date_published": "2023-02-21T00:00:00Z",
            "content_html": "<p>The desired window size is determined by the <code>windowResizability</code> method of the <code>WindowGroup</code>. The example below uses the frame of the content view to fix the window size to 300x200.</p><p><a href=\"https://gavinw.me/notes/swiftui/window-resizability.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/bar-plot.html",
            "url": "https://gavinw.me/notes/matplotlib/bar-plot.html",
            "title": "Bar plot",
            "date_published": "2023-02-09T00:00:00Z",
            "content_html": "<p>The example below creates a bar plot and adds value labels to each bar.</p><p><a href=\"https://gavinw.me/notes/matplotlib/bar-plot.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/index-max.html",
            "url": "https://gavinw.me/notes/numpy/index-max.html",
            "title": "Index of max value",
            "date_published": "2023-02-06T00:00:00Z",
            "content_html": "<p>Use NumPy's <code>argmax()</code> function to get the index of the maximum value in an array.</p><p><a href=\"https://gavinw.me/notes/numpy/index-max.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/form-htmx.html",
            "url": "https://gavinw.me/notes/flask/form-htmx.html",
            "title": "Form input with Htmx",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://htmx.org\">Htmx</a> allows you to develop dynamic, interactive web pages without complex JavaScript. The example below uses Htmx in a Flask app to submit a form when the page loads. Results calculated from the form values are displayed on the same page.</p><p><a href=\"https://gavinw.me/notes/flask/form-htmx.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/plotly-restyle.html",
            "url": "https://gavinw.me/notes/flask/plotly-restyle.html",
            "title": "Plotly graph restyle",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://plotly.com\">Plotly</a> is a great graphing library for scientific applications. The example below demonstrates using the Plotly JavaScript library in a Flask app. When the page first loads, a default line graph is shown. New data points are added to the graph using the form inputs. The <code>Plotly.restyle</code> function is used to redraw the graph when new data points are submitted; this approach avoids recreating an entirely new Plotly graph each time the data is updated.</p><p><a href=\"https://gavinw.me/notes/flask/plotly-restyle.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/ajax.html",
            "url": "https://gavinw.me/notes/flask/ajax.html",
            "title": "Update page with Ajax",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>This Flask webapp example uses Ajax to update the page with results from the post request. The results are returned as JSON which is used to update the div tags.</p><p><a href=\"https://gavinw.me/notes/flask/ajax.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/bokeh-htmx.html",
            "url": "https://gavinw.me/notes/flask/bokeh-htmx.html",
            "title": "Bokeh graph with Htmx",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://bokeh.org\">Bokeh</a> is a visualization library for Python that makes it easy to plot data in Jupyter notebooks or web pages. <a href=\"https://htmx.org\">Htmx</a> allows you to develop dynamic, interactive web pages without complex JavaScript. The example below uses Htmx in a Flask app to display a Bokeh graph in a web page without updating the entire page.</p><p><a href=\"https://gavinw.me/notes/flask/bokeh-htmx.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/plotly-graph.html",
            "url": "https://gavinw.me/notes/flask/plotly-graph.html",
            "title": "Plotly graph",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://plotly.com\">Plotly</a> is a great graphing library for scientific applications. The example below demonstrates using the Plotly JavaScript library in a Flask app.</p><p><a href=\"https://gavinw.me/notes/flask/plotly-graph.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/plotly-htmx.html",
            "url": "https://gavinw.me/notes/flask/plotly-htmx.html",
            "title": "Plotly graph with Htmx",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://htmx.org\">Htmx</a> allows you to develop dynamic, interactive web pages without complex JavaScript. The example below uses Htmx in a Flask app to display a Plotly graph in a web page without updating the entire page.</p><p><a href=\"https://gavinw.me/notes/flask/plotly-htmx.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/bokeh-graph.html",
            "url": "https://gavinw.me/notes/flask/bokeh-graph.html",
            "title": "Bokeh graph",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p><a href=\"https://bokeh.org\">Bokeh</a> is a visualization library for Python that makes it easy to plot data in Jupyter notebooks or web pages. The example below uses Flask to serve a web page, handle the form input data, then plot the data on a separate page using Bokeh.</p><p><a href=\"https://gavinw.me/notes/flask/bokeh-graph.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/form-input.html",
            "url": "https://gavinw.me/notes/flask/form-input.html",
            "title": "Form input",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>An HTML form collects user input on a web page. Using Flask, the input can be evaluated in Python and used elsewhere in the web application. As an example, in the <code>app.py</code> file shown below, the index or home page renders the HTML form. The input from the form is handled as two numbers. The sum, product, and fraction of the numbers are calculated then passed to the results page.</p><p><a href=\"https://gavinw.me/notes/flask/form-input.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/sorted-list.html",
            "url": "https://gavinw.me/notes/python/sorted-list.html",
            "title": "Sorted list of items",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>A list of dictionaries can be sorted using the keys in the dictionaries, while a list of tuples can be sorted using the tuple's index.</p><p><a href=\"https://gavinw.me/notes/python/sorted-list.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/label.html",
            "url": "https://gavinw.me/notes/tkinter/label.html",
            "title": "Update Label text",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Example of updating a Label's text in Tkinter.</p><p><a href=\"https://gavinw.me/notes/tkinter/label.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/ttkbootstrap.html",
            "url": "https://gavinw.me/notes/tkinter/ttkbootstrap.html",
            "title": "Theme ttkbootstrap",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Example of a Tkinter app using the ttkbootstrap theme. More information about\nthe theme is available on GitHub at <a href=\"https://github.com/israel-dryer/ttkbootstrap\">israel-dryer/ttkbootstrap</a>.</p><p><a href=\"https://gavinw.me/notes/tkinter/ttkbootstrap.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/customtkinter.html",
            "url": "https://gavinw.me/notes/tkinter/customtkinter.html",
            "title": "Theme customtkinter",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Example of a Tkinter app using the customtkinter theme. This theme will automatically change to light or dark mode when the macOS appearance changes. More information about the theme is available on GitHub at <a href=\"https://github.com/TomSchimansky/CustomTkinter\">TomSchimansky/CustomTkinter</a>.</p><p><a href=\"https://gavinw.me/notes/tkinter/customtkinter.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/open-json-file.html",
            "url": "https://gavinw.me/notes/tkinter/open-json-file.html",
            "title": "Open JSON file",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Example of opening a JSON file and reading its contents in a Tkinter app. See\nthe <a href=\"https://docs.python.org/3/library/dialog.html\">Python Tkinter docs</a> for\nmore information about file selection dialogs.</p><p><a href=\"https://gavinw.me/notes/tkinter/open-json-file.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/matplotlib.html",
            "url": "https://gavinw.me/notes/tkinter/matplotlib.html",
            "title": "View data with Matplotlib",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Below is an example of using Matplotlib to plot data in a Tkinter app. The plot figure is shown in a separate window when the button is pressed.</p><p><a href=\"https://gavinw.me/notes/tkinter/matplotlib.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/tkinter/basic-app.html",
            "url": "https://gavinw.me/notes/tkinter/basic-app.html",
            "title": "Basic Tkinter application",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>This example demonstrates the structure of a basic Tkinter application.</p><p><a href=\"https://gavinw.me/notes/tkinter/basic-app.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/large-array-memory.html",
            "url": "https://gavinw.me/notes/numpy/large-array-memory.html",
            "title": "Large array memory usage",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>In the examples below, a 500x2000x2000 three-dimensional NumPy array named <code>a</code> is initialized with zeros. At each iteration, a random two-dimensional array <code>r</code> is inserted into array <code>a</code>. This approach could represent a larger piece of code where the <code>r</code> array would be created from various calculations during each iteration of the for-loop. Consequently, each slice in the z dimension of the <code>a</code> array is calculated at each iteration.</p><p><a href=\"https://gavinw.me/notes/numpy/large-array-memory.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/line-plot.html",
            "url": "https://gavinw.me/notes/matplotlib/line-plot.html",
            "title": "Line plot",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Below is a simple example of plotting a line using Matplotlib.</p><p><a href=\"https://gavinw.me/notes/matplotlib/line-plot.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/animation.html",
            "url": "https://gavinw.me/notes/matplotlib/animation.html",
            "title": "Animation",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Matplotlib provides two animation classes for animating a plot figure. The example below uses the ArtistAnimation class. The animation can be displayed just like any other Matplotlib figure and saved to file as various video formats.</p><p><a href=\"https://gavinw.me/notes/matplotlib/animation.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/contour-smoothing.html",
            "url": "https://gavinw.me/notes/matplotlib/contour-smoothing.html",
            "title": "Contour plot smoothing",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>The example below generates a contour plot of sparse data.</p><p><a href=\"https://gavinw.me/notes/matplotlib/contour-smoothing.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/matplotlib/mosaic-grid.html",
            "url": "https://gavinw.me/notes/matplotlib/mosaic-grid.html",
            "title": "Mosaic grid of plots",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>Example of using Matplotlib <code>subplot_mosaic()</code> to create a grid of plots.</p><p><a href=\"https://gavinw.me/notes/matplotlib/mosaic-grid.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/blur-effect.html",
            "url": "https://gavinw.me/notes/swiftui/blur-effect.html",
            "title": "Blur effect",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>The blur modifier, denoted by <code>.blur</code>, can be used to blur a view.</p><p><a href=\"https://gavinw.me/notes/swiftui/blur-effect.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/sine-wave.html",
            "url": "https://gavinw.me/notes/swiftui/sine-wave.html",
            "title": "Sine wave",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>To draw a sine wave, create a shape that draws a line using x and y values. The values must be converted to the proper points within the view's frame. Markers represent points on the drawn line.</p><p><a href=\"https://gavinw.me/notes/swiftui/sine-wave.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/grid-lines.html",
            "url": "https://gavinw.me/notes/swiftui/grid-lines.html",
            "title": "Grid lines",
            "date_published": "2023-02-04T00:00:00Z",
            "content_html": "<p>A GeometryReader can be used to equally space lines in a view even when that view changes size. This is accomplished by using the width and height of the container view to determine the spacing of the lines.</p><p><a href=\"https://gavinw.me/notes/swiftui/grid-lines.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/element-array-addition.html",
            "url": "https://gavinw.me/notes/swift/element-array-addition.html",
            "title": "Element-wise array addition",
            "date_published": "2023-01-16T00:00:00Z",
            "content_html": "<p>There are several ways to perform element-wise array addition with Swift arrays. One approach is to use a for-loop, another approach is to use the Accelerate framework, and yet another approach is to use a Metal GPU compute kernel. An example of each approach is given below and an elapsed time comparison for adding two large arrays is given in the Summary section.</p><p><a href=\"https://gavinw.me/notes/swift/element-array-addition.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/resources.html",
            "url": "https://gavinw.me/notes/cpp/resources.html",
            "title": "Resources",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Below are some useful resources for learning C++ programming.</p><p><a href=\"https://gavinw.me/notes/cpp/resources.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/strings.html",
            "url": "https://gavinw.me/notes/cpp/strings.html",
            "title": "Strings",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Examples of working with strings are given below.</p><p><a href=\"https://gavinw.me/notes/cpp/strings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/clang-macos.html",
            "url": "https://gavinw.me/notes/cpp/clang-macos.html",
            "title": "Clang on macOS",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Check if the clang compiler is installed on your Mac using the following terminal command:</p><p><a href=\"https://gavinw.me/notes/cpp/clang-macos.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/comments.html",
            "url": "https://gavinw.me/notes/cpp/comments.html",
            "title": "Comments",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>C++ supports single-line and multiline comments. A single-line comment is represented by two forward slashes <code>//</code>.</p><p><a href=\"https://gavinw.me/notes/cpp/comments.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/helloworld.html",
            "url": "https://gavinw.me/notes/cpp/helloworld.html",
            "title": "Hello world",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Here is a simple example of a C++ program in a file named <code>helloworld.cpp</code>.</p><p><a href=\"https://gavinw.me/notes/cpp/helloworld.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/cmake-install.html",
            "url": "https://gavinw.me/notes/cpp/cmake-install.html",
            "title": "CMake install",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Below is an example C++ project. The CMakeLists file contains instructions for building and installing the project using the CMake command line tool.</p><p><a href=\"https://gavinw.me/notes/cpp/cmake-install.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/cmake-build.html",
            "url": "https://gavinw.me/notes/cpp/cmake-build.html",
            "title": "CMake build",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Below is an example C++ project. The CMakeLists file contains instructions for building the project using the CMake command line tool.</p><p><a href=\"https://gavinw.me/notes/cpp/cmake-build.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/numbers.html",
            "url": "https://gavinw.me/notes/cpp/numbers.html",
            "title": "Numbers",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>Examples of integer, float, and double numbers are given below. An integer is just a whole number (no decimals). A float is a number with up to 7 decimal digits and a double is up to 15 decimal digits of precision.</p><p><a href=\"https://gavinw.me/notes/cpp/numbers.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/cpp/commandline.html",
            "url": "https://gavinw.me/notes/cpp/commandline.html",
            "title": "Command line arguments",
            "date_published": "2022-12-13T00:00:00Z",
            "content_html": "<p>To pass command line arguments to a program, define <code>main()</code> with two arguments. The <code>argc</code> argument is the number of command line arguments including the program name while <code>argv</code> is the list of arguments passed to the program.</p><p><a href=\"https://gavinw.me/notes/cpp/commandline.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/twocol-navsplit.html",
            "url": "https://gavinw.me/notes/swiftui/twocol-navsplit.html",
            "title": "Two column NavigationSplitView",
            "date_published": "2022-11-30T00:00:00Z",
            "content_html": "<p>A two column <code>NavigationSplitView</code> creates a sidebar with a list of items and a detail view. In the example shown below, selecting an item in the sidebar will change the contents of the detail view. Notice the <code>SidebarCommands()</code> enables Hide Sidebar and Show Sidebar items in the View menu.</p><p><a href=\"https://gavinw.me/notes/swiftui/twocol-navsplit.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/dictionaries.html",
            "url": "https://gavinw.me/notes/python/dictionaries.html",
            "title": "Dictionaries",
            "date_published": "2022-11-15T00:00:00Z",
            "content_html": "<p>A dictionary can be created with comma-separated key:value pairs within braces or by using the dict type constructor. A value is accessed by specifying its key in square brackets. The order of items in a dictionary is guaranteed as of Python 3.7.</p><p><a href=\"https://gavinw.me/notes/python/dictionaries.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/text.html",
            "url": "https://gavinw.me/notes/swiftui/text.html",
            "title": "Text",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A Text view displays one or more lines of read-only text.</p><p><a href=\"https://gavinw.me/notes/swiftui/text.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/label.html",
            "url": "https://gavinw.me/notes/swiftui/label.html",
            "title": "Label",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Use a Label to show text and an icon side by side. The icon can be either an SF Symbol or your own image. The label can be scaled with the font modifier. A completely custom label can be created using custom views for the text and icon.</p><p><a href=\"https://gavinw.me/notes/swiftui/label.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/nspasteboard.html",
            "url": "https://gavinw.me/notes/swiftui/nspasteboard.html",
            "title": "NSPasteboard",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The typical way to copy text is to select it with the mouse then press \u2318C. To do this in code, use the NSPasteboard class to transfer text to the pasteboard server.</p><p><a href=\"https://gavinw.me/notes/swiftui/nspasteboard.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/viewtapgesture.html",
            "url": "https://gavinw.me/notes/swiftui/viewtapgesture.html",
            "title": "View Tap Gesture",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Use a view's tap gesture modifier to perform an action when the view is tapped (clicked). The count parameter defines how many taps (or clicks) are needed to perform the action.</p><p><a href=\"https://gavinw.me/notes/swiftui/viewtapgesture.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/sidebar-toggle.html",
            "url": "https://gavinw.me/notes/swiftui/sidebar-toggle.html",
            "title": "Sidebar toggle",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A sidebar view can be displayed or hidden using the toggleSidebar() feature from an NSSplitViewController. At the time of writing this article, SwiftUI does not have this feature but hopefully an upcoming WWDC will offer a SwiftUI solution.</p><p><a href=\"https://gavinw.me/notes/swiftui/sidebar-toggle.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/window-toolbar-style.html",
            "url": "https://gavinw.me/notes/swiftui/window-toolbar-style.html",
            "title": "Window and toolbar style",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The window and toolbar style can be defined with the windowStyle() and windowToolbarStyle() modifiers for the WindowGroup in the main app struct. Some of the styles are demonstrated below.</p><p><a href=\"https://gavinw.me/notes/swiftui/window-toolbar-style.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/toggle-animation.html",
            "url": "https://gavinw.me/notes/swiftui/toggle-animation.html",
            "title": "Toggle animation",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>An example of fading text in and out using a toggle is given below. Without the animation modifier, the text would just appear or disappear below the toggle button.</p><p><a href=\"https://gavinw.me/notes/swiftui/toggle-animation.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/appstorage.html",
            "url": "https://gavinw.me/notes/swiftui/appstorage.html",
            "title": "AppStorage",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The <code>@AppStorage</code> property wrapper reads and writes values from user defaults. The example below saves a fruit name (a string) to the fruit key in user defaults. When the app is relaunched, the saved fruit name will be displayed in the text label. Enter a fruit in the text field then click the save fruit button to save a new fruit to the fruit key in user defaults.</p><p><a href=\"https://gavinw.me/notes/swiftui/appstorage.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/scrollview.html",
            "url": "https://gavinw.me/notes/swiftui/scrollview.html",
            "title": "ScrollView",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The scroll view displays its content within a scrollable area of the window.</p><p><a href=\"https://gavinw.me/notes/swiftui/scrollview.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/button-styles.html",
            "url": "https://gavinw.me/notes/swiftui/button-styles.html",
            "title": "Button styles",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Several built-in button styles are available for macOS such as the PlainButtonStyle, LinkButtonStyle, and BorderlessButtonStyle. The BorderedButtonStyle is also the default button style. To create a custom appearance for a button, use the ButtonStyle protocol. To fully customize the button's appearance and behavior, use the PrimitiveButtonStyle protocol.</p><p><a href=\"https://gavinw.me/notes/swiftui/button-styles.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/credits.html",
            "url": "https://gavinw.me/notes/swiftui/credits.html",
            "title": "Credits",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The About window in a Mac application is viewed by selecting the app's name in the top menu bar, then choosing the About item in the menu. The image below displays Safari's About window.</p><p><a href=\"https://gavinw.me/notes/swiftui/credits.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/path-markers.html",
            "url": "https://gavinw.me/notes/swiftui/path-markers.html",
            "title": "Path markers",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Markers can be added to a line path by stacking two views in a ZStack. The line is drawn as a path using LineShape while the markers (filled circles) are created in the MarkersView.</p><p><a href=\"https://gavinw.me/notes/swiftui/path-markers.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/webview.html",
            "url": "https://gavinw.me/notes/swiftui/webview.html",
            "title": "WebView",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A WKWebView from the WebKit framework is used to display web content in a window. The web view can be wrapped with NSViewRepresentable to make it usable with SwiftUI. Content for the web view can be loaded from an HTML file, from a string containing HTML, or from a URL representing a website address. Don't forget to enable \"Outgoing Connections\" in the target's \"App Sandbox\"; otherwise, the website will not display in the app.</p><p><a href=\"https://gavinw.me/notes/swiftui/webview.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/textfield.html",
            "url": "https://gavinw.me/notes/swiftui/textfield.html",
            "title": "TextField",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The TextField structure is a control that provides an editable text field. Various modifiers are available to customize the appearance and text alignment. Actions can be performed when editing begins and ends for the text field or when the return key is pressed.</p><p><a href=\"https://gavinw.me/notes/swiftui/textfield.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/table.html",
            "url": "https://gavinw.me/notes/swiftui/table.html",
            "title": "Table",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A Table presents rows and columns of data that can be selected and sorted. A basic example is shown below.</p><p><a href=\"https://gavinw.me/notes/swiftui/table.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/viewbuilder.html",
            "url": "https://gavinw.me/notes/swiftui/viewbuilder.html",
            "title": "ViewBuilder",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The <code>@ViewBuilder</code> attribute can be used to build views from closures. To demonstrate, three views are defined as shown below:</p><p><a href=\"https://gavinw.me/notes/swiftui/viewbuilder.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/three-column-nav.html",
            "url": "https://gavinw.me/notes/swiftui/three-column-nav.html",
            "title": "Three column NavigationView",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A three column NavigationView is created using a similar approach as the two column NavigationView. The middle column has a fixed minimum width of 200 but the frame's minWidth can be specified with a value greater than 200.</p><p><a href=\"https://gavinw.me/notes/swiftui/three-column-nav.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/progressview.html",
            "url": "https://gavinw.me/notes/swiftui/progressview.html",
            "title": "ProgressView",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A ProgressView represents completion of a task or the occurance of an activity with an unknown completion time. A default value of 1.0 is used for the total value when tracking completion progress. As the example demonstrates below, different configurations of a progress view are possible.</p><p><a href=\"https://gavinw.me/notes/swiftui/progressview.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/toolbar-dropdown.html",
            "url": "https://gavinw.me/notes/swiftui/toolbar-dropdown.html",
            "title": "Toolbar dropdown",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Place a menu in a toolbar item to display a dropdown when the toolbar item is clicked.</p><p><a href=\"https://gavinw.me/notes/swiftui/toolbar-dropdown.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/picker-control.html",
            "url": "https://gavinw.me/notes/swiftui/picker-control.html",
            "title": "Picker control",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The picker control selects an item from a set of values. The appearance of the picker can be changed by using different styles and modifiers.</p><p><a href=\"https://gavinw.me/notes/swiftui/picker-control.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/images-symbols.html",
            "url": "https://gavinw.me/notes/swiftui/images-symbols.html",
            "title": "Images and symbols",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>An Image view is used to display an image. For the example below, an image named \"homer\" is added to the Assets catalog then the image is displayed in the window while preserving its aspect ratio.</p><p><a href=\"https://gavinw.me/notes/swiftui/images-symbols.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/stepper.html",
            "url": "https://gavinw.me/notes/swiftui/stepper.html",
            "title": "Stepper",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The stepper control increments and decrements a value. A closed range can be used to limit the applicable stepper values.</p><p><a href=\"https://gavinw.me/notes/swiftui/stepper.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/sidebar-disclosuregroup.html",
            "url": "https://gavinw.me/notes/swiftui/sidebar-disclosuregroup.html",
            "title": "Sidebar DisclosureGroup",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>To organize our sidebar view, we can use DisclosureGroup. We can create different sections and specify if they are expanded by default when the application launches.</p><p><a href=\"https://gavinw.me/notes/swiftui/sidebar-disclosuregroup.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/prefs-window.html",
            "url": "https://gavinw.me/notes/swiftui/prefs-window.html",
            "title": "Preferences window",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A preferences window is typically used to present and configure the settings associated with a Mac application. In apps built with SwiftUI, these settings are stored and set using the AppStorage property wrapper. To add a preferenes window to your application, you need to add a Settings group to the main App struct.</p><p><a href=\"https://gavinw.me/notes/swiftui/prefs-window.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/labeledcontent.html",
            "url": "https://gavinw.me/notes/swiftui/labeledcontent.html",
            "title": "LabeledContent",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The LabeledContent view is comprised of a label and content. Usually, it displays the label on the leading edge and the content on the trailing edge. This is similar to using an HStack containing two views.</p><p><a href=\"https://gavinw.me/notes/swiftui/labeledcontent.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/window-open.html",
            "url": "https://gavinw.me/notes/swiftui/window-open.html",
            "title": "Open a window",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>To open a window using SwiftUI, first add a WindowGroup that will display the window's view. Use the handlesExternalEvents modifier to indicate the event that is used to display the window.</p><p><a href=\"https://gavinw.me/notes/swiftui/window-open.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/menu-items.html",
            "url": "https://gavinw.me/notes/swiftui/menu-items.html",
            "title": "Menu items",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>Menus in Mac apps are typically located at the top of the screen in the menu bar. Menu items can be added to an app's menu using the commands modifier on the WindowGroup.</p><p><a href=\"https://gavinw.me/notes/swiftui/menu-items.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/two-column-nav.html",
            "url": "https://gavinw.me/notes/swiftui/two-column-nav.html",
            "title": "Two column NavigationView",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>A two column NavigationView creates a sidebar with a list of items and a content view. In the example shown below, selecting an item in the sidebar will change the content view. An @AppStorage property is used to remember the selected item.</p><p><a href=\"https://gavinw.me/notes/swiftui/two-column-nav.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swiftui/cursors.html",
            "url": "https://gavinw.me/notes/swiftui/cursors.html",
            "title": "Cursors",
            "date_published": "2022-11-13T00:00:00Z",
            "content_html": "<p>The mouse pointer (or cursor) is represented by an arrow on the screen. Different cursors are available in macOS to indicate actions that the user can take with the mouse. See the <a href=\"https://developer.apple.com/documentation/appkit/nscursor\">NSCursor documentation</a> for a list of all the available cursors.</p><p><a href=\"https://gavinw.me/notes/swiftui/cursors.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/dictionaries.html",
            "url": "https://gavinw.me/notes/swift/dictionaries.html",
            "title": "Dictionaries",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>A dictionary in Swift is a list of key-value pairs separated by colons and surrounded by square brackets such as <code>[key: value]</code>. Values returned from a dictionary are optional because the key may not exist in the dictionary.</p><p><a href=\"https://gavinw.me/notes/swift/dictionaries.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/strides.html",
            "url": "https://gavinw.me/notes/swift/strides.html",
            "title": "Strides",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>Use the stride function to step over values between two limits or boundaries. The stride functions can also be used to build arrays with a certain range of numbers.</p><p><a href=\"https://gavinw.me/notes/swift/strides.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/strings.html",
            "url": "https://gavinw.me/notes/swift/strings.html",
            "title": "Strings",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>A string in Swift is represented by characters wrapped with double quotation marks <code>\" \"</code>. Multiline strings are wrapped with three double quotation marks <code>\"\"\" \"\"\"</code>. Use a backslash <code>\\</code> to ignore a line break in a multiline string.</p><p><a href=\"https://gavinw.me/notes/swift/strings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/comments.html",
            "url": "https://gavinw.me/notes/swift/comments.html",
            "title": "Comments",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>Single-line comments begin with two forward-slashes <code>//</code> while multiline comments are wrapped with forward-slashes and asterisks such as <code>/* */</code>.</p><p><a href=\"https://gavinw.me/notes/swift/comments.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/date-formatting.html",
            "url": "https://gavinw.me/notes/swift/date-formatting.html",
            "title": "Date formatting",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>Examples of creating a formatted date string are shown below. The output of each print function is given as a comment below the function.</p><p><a href=\"https://gavinw.me/notes/swift/date-formatting.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/range.html",
            "url": "https://gavinw.me/notes/swift/range.html",
            "title": "Range",
            "date_published": "2022-11-12T00:00:00Z",
            "content_html": "<p>Check if a value is within a given range using the contains method.</p><p><a href=\"https://gavinw.me/notes/swift/range.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/accelerate/absolute-value.html",
            "url": "https://gavinw.me/notes/accelerate/absolute-value.html",
            "title": "Absolute value",
            "date_published": "2022-11-11T00:00:00Z",
            "content_html": "<p>Get the absolute values of a vector using the vDSP.absolute function.</p><p><a href=\"https://gavinw.me/notes/accelerate/absolute-value.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/accelerate/sort.html",
            "url": "https://gavinw.me/notes/accelerate/sort.html",
            "title": "Sort array values",
            "date_published": "2022-11-11T00:00:00Z",
            "content_html": "<p>Sort the values in an array by ascending or descending order. Values of the array must be Float or Double.</p><p><a href=\"https://gavinw.me/notes/accelerate/sort.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/accelerate/reverse.html",
            "url": "https://gavinw.me/notes/accelerate/reverse.html",
            "title": "Reverse array elements",
            "date_published": "2022-11-11T00:00:00Z",
            "content_html": "<p>Reverse the order of elements in an array using the vDSP.reverse function. Values in the array must be Float or Double.</p><p><a href=\"https://gavinw.me/notes/accelerate/reverse.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/strings.html",
            "url": "https://gavinw.me/notes/python/strings.html",
            "title": "Strings",
            "date_published": "2022-11-11T00:00:00Z",
            "content_html": "<p>Some basic examples of creating strings in Python.</p><p><a href=\"https://gavinw.me/notes/python/strings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/resources.html",
            "url": "https://gavinw.me/notes/swift/resources.html",
            "title": "Resources",
            "date_published": "2022-11-10T00:00:00Z",
            "content_html": "<p>There are limited resources for developing native modern Mac apps (even from Apple). But below are some links that Mac developers may find useful.</p><p><a href=\"https://gavinw.me/notes/swift/resources.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/defaults-tool.html",
            "url": "https://gavinw.me/notes/swift/defaults-tool.html",
            "title": "Defaults command line tool",
            "date_published": "2022-11-10T00:00:00Z",
            "content_html": "<p>User defaults created via UserDefaults or AppStorage can be read and deleted using the defaults command line tool. This is useful to clear an app's preferences when developing in Xcode by providing the bundle identifier to the tool.</p><p><a href=\"https://gavinw.me/notes/swift/defaults-tool.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/terminal.html",
            "url": "https://gavinw.me/notes/swift/terminal.html",
            "title": "Terminal setup and commands",
            "date_published": "2022-11-10T00:00:00Z",
            "content_html": "<p>Mac developers often work in the Terminal to use the Swift package manager, install macOS packages with Homebrew, collaborate on projects with Git and GitHub, run server side Swift code, etc. Below are some tips for working in the macOS Terminal.</p><p><a href=\"https://gavinw.me/notes/swift/terminal.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/repl.html",
            "url": "https://gavinw.me/notes/swift/repl.html",
            "title": "Read Eval Print Loop (REPL)",
            "date_published": "2022-11-10T00:00:00Z",
            "content_html": "<p>The Swift Read Eval Print Loop or REPL is an interactive terminal interface for Swift. Type the swift command in the terminal to launch the REPL. The REPL prompt is represented by an angle bracket &gt;. Use the :exit or Control-D commands to exit the REPL environment.</p><p><a href=\"https://gavinw.me/notes/swift/repl.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/swift/install-xcode.html",
            "url": "https://gavinw.me/notes/swift/install-xcode.html",
            "title": "Install Xcode",
            "date_published": "2022-11-09T00:00:00Z",
            "content_html": "<p>The first step (other than getting a Mac) is to download Xcode from the Mac App Store. Visit <a href=\"https://swift.org\">swift.org</a> for instructions on how to install Swift on other platforms such as Linux and Windows.</p><p><a href=\"https://gavinw.me/notes/swift/install-xcode.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/dask/arrays.html",
            "url": "https://gavinw.me/notes/dask/arrays.html",
            "title": "Dask arrays",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>Dask Array is similar to a NumPy array and allows cutting up a large array into smaller arrays (chunks). This enables working with arrays that are larger than memory. Computations can be applied in parallel for fast execution. Below is an example of using Dask array <code>map_blocks()</code> to map a function that returns a single value. Using an 8 CPU core MacBook Pro running macOS v11.6, the serial elapsed time is 513.51 seconds and the Dask elapsed time is 3.21 seconds.</p><p><a href=\"https://gavinw.me/notes/dask/arrays.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/dask/run-as-script.html",
            "url": "https://gavinw.me/notes/dask/run-as-script.html",
            "title": "Run Dask code as a script",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>Since most Dask examples are demonstrated using Jupyter notebooks, here's an example of using Dask in a Python file or script. Notice how the Dask code must be in the <code>__main__</code> block or called from within a function.</p><p><a href=\"https://gavinw.me/notes/dask/run-as-script.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/secrets.html",
            "url": "https://gavinw.me/notes/python/secrets.html",
            "title": "Secrets",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>Use the <code>secrets</code> module to generate cryptographically strong random passwords containing letters, numbers, and punctuation.</p><p><a href=\"https://gavinw.me/notes/python/secrets.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/counter.html",
            "url": "https://gavinw.me/notes/python/counter.html",
            "title": "Counter",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>The <code>Counter</code> class counts the number of times an item appears in a list or hashable object. For example, you can count the number of times a string appears in a list or how often a letter occurs in a string.</p><p><a href=\"https://gavinw.me/notes/python/counter.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/unittest-csv.html",
            "url": "https://gavinw.me/notes/python/unittest-csv.html",
            "title": "Unittest CSV files",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>The example below demonstrates a unit test for a function that writes data in a dictionary to CSV files.</p><p><a href=\"https://gavinw.me/notes/python/unittest-csv.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/json.html",
            "url": "https://gavinw.me/notes/python/json.html",
            "title": "JSON",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>JavaScript Object Notation (JSON) is a common data format that is supported natively in Python. The format is built on name/value pairs and ordered list values. Visit <a href=\"https://www.json.org/json-en.html\">json.org</a> to learn more about the JSON format.</p><p><a href=\"https://gavinw.me/notes/python/json.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/toml.html",
            "url": "https://gavinw.me/notes/python/toml.html",
            "title": "TOML",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>With the <code>toml</code> package, the contents of a TOML file can be loaded into a Python dictionary. Below is an example of reading a TOML file named <code>configure.toml</code> into a <code>config</code> dictionary.</p><p><a href=\"https://gavinw.me/notes/python/toml.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/pathlib.html",
            "url": "https://gavinw.me/notes/python/pathlib.html",
            "title": "Pathlib",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>The <code>pathlib</code> module handles file paths with support for different operating systems.</p><p><a href=\"https://gavinw.me/notes/python/pathlib.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/prealloc-list.html",
            "url": "https://gavinw.me/notes/python/prealloc-list.html",
            "title": "Pre-allocate list",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>If the size of a list is known, then pre-allocating the list can provide\nperformance improvements; especially for a large list. The example below\nmeasures the performance of appending items to an empty list. Pre-allocating\na list of known size and assigning items to it gives better performance than\nappending to the list. The list comprehension approach (see Example 3) gives\nthe best elapsed time.</p><p><a href=\"https://gavinw.me/notes/python/prealloc-list.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/tuples.html",
            "url": "https://gavinw.me/notes/python/tuples.html",
            "title": "Tuples",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>A tuple is a number of items separated by commas.</p><p><a href=\"https://gavinw.me/notes/python/tuples.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/cprofile.html",
            "url": "https://gavinw.me/notes/python/cprofile.html",
            "title": "cProfile",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>The <code>cProfile</code> module provides an interface to profile Python programs. A single function or an entire script or module can be profiled. As an example, the script shown below contains two functions that suspend execution for 2 and 4.5 seconds.</p><p><a href=\"https://gavinw.me/notes/python/cprofile.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/lists.html",
            "url": "https://gavinw.me/notes/python/lists.html",
            "title": "Lists",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>A list is used to group numbers, strings, or objects together. It is written as a pair of square brackets containing comma-separated items. A list typically contains items of similar type but it can contain items of different types too. Unlike tuples, lists are mutable therefore the content of a list can be modified.</p><p><a href=\"https://gavinw.me/notes/python/lists.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/test-examples.html",
            "url": "https://gavinw.me/notes/python/test-examples.html",
            "title": "Test examples",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>Example scripts are often available for Python packages to demonstrate how to use the package. The examples are typically part of the repository where the package is developed. Tests should be written to ensure the examples continue to work with new versions of the package.</p><p><a href=\"https://gavinw.me/notes/python/test-examples.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/enums.html",
            "url": "https://gavinw.me/notes/python/enums.html",
            "title": "Enumerations",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>An enumeration is a set of symbolic names that are bound to unique, constant values. Enumerations (or enums) are implemented in Python using the <code>Enum</code> class from the <code>enum</code> module.</p><p><a href=\"https://gavinw.me/notes/python/enums.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/xml.html",
            "url": "https://gavinw.me/notes/python/xml.html",
            "title": "XML",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>There are several XML parsers available in the Python standard library. Below is an example of using the ElementTree module.</p><p><a href=\"https://gavinw.me/notes/python/xml.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/numbers.html",
            "url": "https://gavinw.me/notes/python/numbers.html",
            "title": "Numbers",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>Python includes three numeric types such as integers <code>int</code>, float <code>float</code>, and complex <code>complex</code> numbers.</p><p><a href=\"https://gavinw.me/notes/python/numbers.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/scipy/sparse-diag.html",
            "url": "https://gavinw.me/notes/scipy/sparse-diag.html",
            "title": "Sparse diagonal matrix",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>The <code>diags</code> function from SciPy can be used to create a sparse diagonal matrix. The matrix is constructed from lists or NumPy arrays that represent the diagonals of the matrix. The <code>offsets</code> argument sets the placement of the diagonals within the matrix where <code>k = 0</code> is the main diagonal, <code>k &lt; 0</code> is the kth lower diagonal, and <code>k &gt; 0</code> is the kth upper diagonal.</p><p><a href=\"https://gavinw.me/notes/scipy/sparse-diag.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/ray/actors.html",
            "url": "https://gavinw.me/notes/ray/actors.html",
            "title": "Ray actors",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p><a href=\"https://www.ray.io\">Ray</a> actors are used to parallelize a class instance to perform stateful operations in parallel. Ray will start a remote instance of the class and then execute remote method calls and maintain its own internal state. The example below compares a parallel Ray actor approach to a standard class approach. A computationally expensive task is simulated by using the <code>sleep()</code> function.</p><p><a href=\"https://gavinw.me/notes/ray/actors.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/ray/functions.html",
            "url": "https://gavinw.me/notes/ray/functions.html",
            "title": "Ray functions",
            "date_published": "2022-11-08T00:00:00Z",
            "content_html": "<p>To parallelize a function with the <a href=\"https://www.ray.io\">Ray</a> framework, decorate the function with <code>@ray.remote</code> to run the function remotely. Call the function with <code>.remote()</code> instead of calling it normally. The remote call yields a future that must be fetched with <code>ray.get</code>. The example below compares a parallel Ray function to a standard non-parallel function. A computationally expensive task is simulated by using the <code>sleep()</code> function.</p><p><a href=\"https://gavinw.me/notes/ray/functions.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/clip-array.html",
            "url": "https://gavinw.me/notes/numpy/clip-array.html",
            "title": "Clip array values",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>The <code>clip</code> function limits the values in an array based on a given interval or minimum or maximum value.</p><p><a href=\"https://gavinw.me/notes/numpy/clip-array.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/bool-index.html",
            "url": "https://gavinw.me/notes/numpy/bool-index.html",
            "title": "Boolean indexing",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>Use boolean indexing in NumPy arrays to assign values. The example below assigns a zero to array items that are less than zero.</p><p><a href=\"https://gavinw.me/notes/numpy/bool-index.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/full-array.html",
            "url": "https://gavinw.me/notes/numpy/full-array.html",
            "title": "Full array",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>Use the <code>full</code> function in NumPy to create a new array filled with a given value.</p><p><a href=\"https://gavinw.me/notes/numpy/full-array.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/maximum-array.html",
            "url": "https://gavinw.me/notes/numpy/maximum-array.html",
            "title": "Maximum array",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>The <code>maximum</code> function returns a new array that contains the maximum values of the two given arrays.</p><p><a href=\"https://gavinw.me/notes/numpy/maximum-array.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/difference.html",
            "url": "https://gavinw.me/notes/numpy/difference.html",
            "title": "Set difference of two arrays",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>The <code>setdiff1d</code> function returns the unique values in array 1 that are not in array 2.</p><p><a href=\"https://gavinw.me/notes/numpy/difference.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/loop-columns.html",
            "url": "https://gavinw.me/notes/numpy/loop-columns.html",
            "title": "Loop over columns",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>Loop over columns in an array by iterating over the transpose of the array.</p><p><a href=\"https://gavinw.me/notes/numpy/loop-columns.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/compare-inv-solve.html",
            "url": "https://gavinw.me/notes/numpy/compare-inv-solve.html",
            "title": "Compare inv and solve functions",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>Solve equation <code>A*x=b</code> for <code>x</code> and compare results using the <code>np.linalg.solve()</code> function to the <code>np.linalg.inv()</code> approach.</p><p><a href=\"https://gavinw.me/notes/numpy/compare-inv-solve.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/numpy/save-load-arrays.html",
            "url": "https://gavinw.me/notes/numpy/save-load-arrays.html",
            "title": "Save and load arrays",
            "date_published": "2022-11-07T00:00:00Z",
            "content_html": "<p>NumPy arrays can be saved and loaded using different file formats. Examples of using the NumPy file formats <code>.npy</code> and <code>.npz</code> as well as a plain text format are given below.</p><p><a href=\"https://gavinw.me/notes/numpy/save-load-arrays.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/install-python.html",
            "url": "https://gavinw.me/notes/python/install-python.html",
            "title": "Installing Python",
            "date_published": "2022-11-05T00:00:00Z",
            "content_html": "<p>The most common way to install Python is at <a href=\"https://www.python.org\">https://www.python.org</a>. Go to the Downloads section for step-by-step instructions on how to download and install Python for your operating system. For scientific computing, check out the Anaconda distribution of Python available at <a href=\"https://www.anaconda.com\">https://www.anaconda.com</a>. Go to the Products section and select the open source Individual Edition.</p><p><a href=\"https://gavinw.me/notes/python/install-python.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/flask/heroku.html",
            "url": "https://gavinw.me/notes/flask/heroku.html",
            "title": "Deploy on Heroku",
            "date_published": "2022-11-01T00:00:00Z",
            "content_html": "<p><a href=\"https://www.heroku.com\">Heroku</a> makes it easy to deploy a Python Flask application. To get started, create a project folder and a virtual environment in that folder. Notice that <code>env</code> is the name of the virtual environment discussed below; it can be called <code>myenv</code> or something else.</p><p><a href=\"https://gavinw.me/notes/flask/heroku.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/testing.html",
            "url": "https://gavinw.me/notes/julia/testing.html",
            "title": "Testing",
            "date_published": "2021-06-26T00:00:00Z",
            "content_html": "<p>To demonstrate testing functions in Julia, two functions are defined below. A small program that uses the functions is also shown.</p><p><a href=\"https://gavinw.me/notes/julia/testing.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/docstrings.html",
            "url": "https://gavinw.me/notes/julia/docstrings.html",
            "title": "Docstrings",
            "date_published": "2021-06-24T00:00:00Z",
            "content_html": "<p>Any string appearing directly above an object is interpreted as a docstring for that object. This documentation is treated as Markdown therefore code blocks and other Markdown supported features are supported. An example docstring for a function is shown below.</p><p><a href=\"https://gavinw.me/notes/julia/docstrings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/debugging.html",
            "url": "https://gavinw.me/notes/julia/debugging.html",
            "title": "Debugging",
            "date_published": "2021-06-22T00:00:00Z",
            "content_html": "<p>One way to debug Julia code is to use the <a href=\"https://github.com/JuliaDebug/Infiltrator.jl\">Infiltrator.jl package</a>.  As shown in the example file below, a breakpoint is set with the <code>@infiltrate</code> macro.</p><p><a href=\"https://gavinw.me/notes/julia/debugging.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/getting-started.html",
            "url": "https://gavinw.me/notes/julia/getting-started.html",
            "title": "Getting started",
            "date_published": "2021-06-20T00:00:00Z",
            "content_html": "<p>To get started, visit the main Julia website at <a href=\"https://julialang.org\">https://julialang.org</a> and follow their download and installation instructions. Julia is available for macOS, various flavors of Linux, FreeBSD, and Windows. After installation, read the sections below to learn more about the various features of the language.</p><p><a href=\"https://gavinw.me/notes/julia/getting-started.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/arrays.html",
            "url": "https://gavinw.me/notes/julia/arrays.html",
            "title": "Arrays",
            "date_published": "2021-06-20T00:00:00Z",
            "content_html": "<p>An array is a collection of items surrounded by square brackets <code>[ ]</code>. Arrays in Julia are 1-based therefore the first item in an array is at the 1-index.</p><p><a href=\"https://gavinw.me/notes/julia/arrays.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/conditionals.html",
            "url": "https://gavinw.me/notes/julia/conditionals.html",
            "title": "Conditional statements",
            "date_published": "2021-06-13T00:00:00Z",
            "content_html": "<p>A conditional statement is written with the <code>if-elseif-else</code> syntax. The ternary operator <code>? :</code> offers a concise syntax for a conditional expression.</p><p><a href=\"https://gavinw.me/notes/julia/conditionals.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/comments.html",
            "url": "https://gavinw.me/notes/julia/comments.html",
            "title": "Comments",
            "date_published": "2021-06-13T00:00:00Z",
            "content_html": "<p>Single line and inline comments begin with <code>#</code> in Julia. Wrap multiple lines of text with <code>#= =#</code> for multiline comments.</p><p><a href=\"https://gavinw.me/notes/julia/comments.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/modules.html",
            "url": "https://gavinw.me/notes/julia/modules.html",
            "title": "Modules",
            "date_published": "2021-06-08T00:00:00Z",
            "content_html": "<p>Modules help organize code that can be easily used in another program. The <code>MyModule</code> shown below is an example of a user defined module which includes functions from the <code>funcA</code> and <code>funcB</code> files. For this example the module and its associated files are contained in a folder called MyModule.</p><p><a href=\"https://gavinw.me/notes/julia/modules.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/json-parsing.html",
            "url": "https://gavinw.me/notes/julia/json-parsing.html",
            "title": "JSON parsing",
            "date_published": "2021-06-08T00:00:00Z",
            "content_html": "<p>The <a href=\"https://juliapackages.com/p/json\">JSON.jl package</a> provides JSON parsing and printing capabilities in Julia. See the package's documentation for installation and usage information. The example below parses the <code>vehicles.json</code> file which contains</p><p><a href=\"https://gavinw.me/notes/julia/json-parsing.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/print.html",
            "url": "https://gavinw.me/notes/julia/print.html",
            "title": "Print",
            "date_published": "2021-06-02T00:00:00Z",
            "content_html": "<p>The <code>print()</code> function prints an undecorated text representation of an object. Similarly, the <code>println()</code> function prints text followed by a newline.</p><p><a href=\"https://gavinw.me/notes/julia/print.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/functions.html",
            "url": "https://gavinw.me/notes/julia/functions.html",
            "title": "Functions",
            "date_published": "2021-05-27T00:00:00Z",
            "content_html": "<p>In Julia, a function is an object where input arguments provide a return value.</p><p><a href=\"https://gavinw.me/notes/julia/functions.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/loops.html",
            "url": "https://gavinw.me/notes/julia/loops.html",
            "title": "Loops",
            "date_published": "2021-05-25T00:00:00Z",
            "content_html": "<p>Use a for-loop for repeated tasks and to iterate over arrays.</p><p><a href=\"https://gavinw.me/notes/julia/loops.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/operators.html",
            "url": "https://gavinw.me/notes/julia/operators.html",
            "title": "Operators",
            "date_published": "2021-05-25T00:00:00Z",
            "content_html": "<p>The arithmetic operators shown below are available in Julia.</p><p><a href=\"https://gavinw.me/notes/julia/operators.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/tuples.html",
            "url": "https://gavinw.me/notes/julia/tuples.html",
            "title": "Tuples",
            "date_published": "2021-05-23T00:00:00Z",
            "content_html": "<p>A tuple is a fixed-length immutable container represented by parentheses <code>( )</code>. Values in a tuple are accessed with indexing. A single item tuple must contain a comma.</p><p><a href=\"https://gavinw.me/notes/julia/tuples.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/dictionaries.html",
            "url": "https://gavinw.me/notes/julia/dictionaries.html",
            "title": "Dictionaries",
            "date_published": "2021-05-22T00:00:00Z",
            "content_html": "<p>The <code>Dict()</code> constructor is used to create dictionaries in Julia. A dictionary is constructed using key value pairs separated with <code>=&gt;</code> or as tuples.</p><p><a href=\"https://gavinw.me/notes/julia/dictionaries.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/julia/strings.html",
            "url": "https://gavinw.me/notes/julia/strings.html",
            "title": "Strings",
            "date_published": "2021-05-22T00:00:00Z",
            "content_html": "<p>Strings can be represented by double quotes or by triple double quotes. A character or group of characters are extracted from a string using an index or range. Combining strings can be accomplished with <code>$</code>, <code>string</code>, and <code>*</code>.</p><p><a href=\"https://gavinw.me/notes/julia/strings.html\">Continue reading...</a></p>"
        },
        {
            "id": "https://gavinw.me/notes/python/fizzbuzz.html",
            "url": "https://gavinw.me/notes/python/fizzbuzz.html",
            "title": "Fizz buzz",
            "date_published": "2020-05-14T00:00:00Z",
            "content_html": "<p>This is the classic fizz buzz example where a number divisible by 3 is replaced with Fizz, a number divisible by 5 is replaced with Buzz, and a number divisible by both 3 and 5 (divisible by 15) is replaced with Fizz Buzz.</p><p><a href=\"https://gavinw.me/notes/python/fizzbuzz.html\">Continue reading...</a></p>"
        }
    ]
}